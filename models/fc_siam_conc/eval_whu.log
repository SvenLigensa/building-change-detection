2024/07/29 12:29:59 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.10 (default, Jun 22 2022, 20:18:18) [GCC 9.4.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 312072892
    GPU 0: NVIDIA GeForce RTX 3090
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.1, V11.1.105
    GCC: x86_64-linux-gnu-gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
    PyTorch: 2.0.0+cu117
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.1+cu117
    OpenCV: 4.9.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 312072892
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/07/29 12:29:59 - mmengine - INFO - Config:
base_channels = 16
crop_size = (
    512,
    512,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size_divisor=32,
    std=[
        58.395,
        57.12,
        57.375,
        58.395,
        57.12,
        57.375,
    ],
    test_cfg=dict(size_divisor=32),
    type='DualInputSegDataPreProcessor')
data_root = 'data/WHU'
dataset_type = 'WHU_CD_Dataset'
default_hooks = dict(
    logger=dict(interval=50, log_metric_by_epoch=True, type='LoggerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        draw=True,
        img_shape=(
            512,
            512,
            3,
        ),
        interval=1,
        type='CDVisualizationHook'))
default_scope = 'opencd'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = 'fc_siam_conc/iter_41660.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(base_channel=16, in_channels=3, type='FC_Siam_conc'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
            58.395,
            57.12,
            57.375,
        ],
        test_cfg=dict(size_divisor=32),
        type='DualInputSegDataPreProcessor'),
    decode_head=dict(
        channels=16,
        concat_input=False,
        in_channels=16,
        in_index=-1,
        loss_decode=dict(
            loss_weight=1.0, type='mmseg.CrossEntropyLoss', use_sigmoid=False),
        num_classes=2,
        num_convs=0,
        type='mmseg.FCNHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='DIEncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path_from='all/A',
            img_path_to='all/B',
            seg_map_path='all/label'),
        data_root='data/WHU',
        pipeline=[
            dict(type='MultiImgLoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                512,
                512,
            ), type='MultiImgResize'),
            dict(type='MultiImgLoadAnnotations'),
            dict(type='MultiImgPackSegInputs'),
        ],
        type='WHU_CD_Dataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mFscore',
        'mIoU',
    ], type='mmseg.IoUMetric')
test_pipeline = [
    dict(type='MultiImgLoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        512,
        512,
    ), type='MultiImgResize'),
    dict(type='MultiImgLoadAnnotations'),
    dict(type='MultiImgPackSegInputs'),
]
tta_model = dict(type='mmseg.SegTTAModel')
vis_backends = [
    dict(type='CDLocalVisBackend'),
]
visualizer = dict(
    alpha=1.0,
    name='visualizer',
    save_dir='./fc_siam_conc/whu',
    type='CDLocalVisualizer',
    vis_backends=[
        dict(type='CDLocalVisBackend'),
    ])
work_dir = './fc_siam_conc'

2024/07/29 12:30:01 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/07/29 12:30:01 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) CDVisualizationHook                
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) CDVisualizationHook                
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) CDVisualizationHook                
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/07/29 12:30:01 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2024/07/29 12:30:01 - mmengine - INFO - Load checkpoint from fc_siam_conc/iter_41660.pth
2024/07/29 12:30:05 - mmengine - INFO - Epoch(test) [  50/1950]    eta: 0:02:25  time: 0.0768  data_time: 0.0359  memory: 6435  
2024/07/29 12:30:07 - mmengine - INFO - Epoch(test) [ 100/1950]    eta: 0:01:48  time: 0.0411  data_time: 0.0332  memory: 267  
2024/07/29 12:30:09 - mmengine - INFO - Epoch(test) [ 150/1950]    eta: 0:01:35  time: 0.0411  data_time: 0.0331  memory: 267  
2024/07/29 12:30:11 - mmengine - INFO - Epoch(test) [ 200/1950]    eta: 0:01:27  time: 0.0415  data_time: 0.0336  memory: 267  
2024/07/29 12:30:13 - mmengine - INFO - Epoch(test) [ 250/1950]    eta: 0:01:22  time: 0.0415  data_time: 0.0337  memory: 267  
2024/07/29 12:30:15 - mmengine - INFO - Epoch(test) [ 300/1950]    eta: 0:01:18  time: 0.0440  data_time: 0.0362  memory: 267  
2024/07/29 12:30:18 - mmengine - INFO - Epoch(test) [ 350/1950]    eta: 0:01:15  time: 0.0430  data_time: 0.0350  memory: 267  
2024/07/29 12:30:20 - mmengine - INFO - Epoch(test) [ 400/1950]    eta: 0:01:12  time: 0.0428  data_time: 0.0350  memory: 267  
2024/07/29 12:30:22 - mmengine - INFO - Epoch(test) [ 450/1950]    eta: 0:01:08  time: 0.0410  data_time: 0.0332  memory: 267  
2024/07/29 12:30:24 - mmengine - INFO - Epoch(test) [ 500/1950]    eta: 0:01:05  time: 0.0414  data_time: 0.0335  memory: 267  
2024/07/29 12:30:26 - mmengine - INFO - Epoch(test) [ 550/1950]    eta: 0:01:02  time: 0.0406  data_time: 0.0327  memory: 267  
2024/07/29 12:30:28 - mmengine - INFO - Epoch(test) [ 600/1950]    eta: 0:01:00  time: 0.0444  data_time: 0.0366  memory: 267  
2024/07/29 12:30:30 - mmengine - INFO - Epoch(test) [ 650/1950]    eta: 0:00:58  time: 0.0417  data_time: 0.0339  memory: 267  
2024/07/29 12:30:32 - mmengine - INFO - Epoch(test) [ 700/1950]    eta: 0:00:55  time: 0.0413  data_time: 0.0335  memory: 267  
2024/07/29 12:30:34 - mmengine - INFO - Epoch(test) [ 750/1950]    eta: 0:00:53  time: 0.0408  data_time: 0.0330  memory: 267  
2024/07/29 12:30:36 - mmengine - INFO - Epoch(test) [ 800/1950]    eta: 0:00:50  time: 0.0408  data_time: 0.0330  memory: 267  
2024/07/29 12:30:38 - mmengine - INFO - Epoch(test) [ 850/1950]    eta: 0:00:48  time: 0.0409  data_time: 0.0331  memory: 267  
2024/07/29 12:30:41 - mmengine - INFO - Epoch(test) [ 900/1950]    eta: 0:00:46  time: 0.0443  data_time: 0.0365  memory: 267  
2024/07/29 12:30:43 - mmengine - INFO - Epoch(test) [ 950/1950]    eta: 0:00:43  time: 0.0420  data_time: 0.0342  memory: 267  
2024/07/29 12:30:45 - mmengine - INFO - Epoch(test) [1000/1950]    eta: 0:00:41  time: 0.0424  data_time: 0.0346  memory: 267  
2024/07/29 12:30:47 - mmengine - INFO - Epoch(test) [1050/1950]    eta: 0:00:39  time: 0.0413  data_time: 0.0335  memory: 267  
2024/07/29 12:30:49 - mmengine - INFO - Epoch(test) [1100/1950]    eta: 0:00:36  time: 0.0407  data_time: 0.0330  memory: 267  
2024/07/29 12:30:51 - mmengine - INFO - Epoch(test) [1150/1950]    eta: 0:00:34  time: 0.0439  data_time: 0.0360  memory: 267  
2024/07/29 12:30:55 - mmengine - INFO - Epoch(test) [1200/1950]    eta: 0:00:33  time: 0.0664  data_time: 0.0582  memory: 267  
2024/07/29 12:30:58 - mmengine - INFO - Epoch(test) [1250/1950]    eta: 0:00:31  time: 0.0631  data_time: 0.0549  memory: 267  
2024/07/29 12:31:00 - mmengine - INFO - Epoch(test) [1300/1950]    eta: 0:00:29  time: 0.0488  data_time: 0.0407  memory: 267  
2024/07/29 12:31:02 - mmengine - INFO - Epoch(test) [1350/1950]    eta: 0:00:27  time: 0.0406  data_time: 0.0328  memory: 267  
2024/07/29 12:31:04 - mmengine - INFO - Epoch(test) [1400/1950]    eta: 0:00:24  time: 0.0421  data_time: 0.0345  memory: 267  
2024/07/29 12:31:06 - mmengine - INFO - Epoch(test) [1450/1950]    eta: 0:00:22  time: 0.0410  data_time: 0.0332  memory: 267  
2024/07/29 12:31:08 - mmengine - INFO - Epoch(test) [1500/1950]    eta: 0:00:20  time: 0.0415  data_time: 0.0338  memory: 267  
2024/07/29 12:31:11 - mmengine - INFO - Epoch(test) [1550/1950]    eta: 0:00:17  time: 0.0448  data_time: 0.0370  memory: 267  
2024/07/29 12:31:13 - mmengine - INFO - Epoch(test) [1600/1950]    eta: 0:00:15  time: 0.0413  data_time: 0.0335  memory: 267  
2024/07/29 12:31:15 - mmengine - INFO - Epoch(test) [1650/1950]    eta: 0:00:13  time: 0.0420  data_time: 0.0340  memory: 267  
2024/07/29 12:31:17 - mmengine - INFO - Epoch(test) [1700/1950]    eta: 0:00:11  time: 0.0410  data_time: 0.0333  memory: 267  
2024/07/29 12:31:19 - mmengine - INFO - Epoch(test) [1750/1950]    eta: 0:00:08  time: 0.0408  data_time: 0.0330  memory: 267  
2024/07/29 12:31:21 - mmengine - INFO - Epoch(test) [1800/1950]    eta: 0:00:06  time: 0.0411  data_time: 0.0334  memory: 267  
2024/07/29 12:31:23 - mmengine - INFO - Epoch(test) [1850/1950]    eta: 0:00:04  time: 0.0417  data_time: 0.0339  memory: 267  
2024/07/29 12:31:25 - mmengine - INFO - Epoch(test) [1900/1950]    eta: 0:00:02  time: 0.0438  data_time: 0.0361  memory: 267  
2024/07/29 12:31:27 - mmengine - INFO - Epoch(test) [1950/1950]    eta: 0:00:00  time: 0.0412  data_time: 0.0334  memory: 267  
2024/07/29 12:31:27 - mmengine - INFO - per class results:
2024/07/29 12:31:27 - mmengine - INFO - 
+-----------+--------+-----------+--------+-------+-------+
|   Class   | Fscore | Precision | Recall |  IoU  |  Acc  |
+-----------+--------+-----------+--------+-------+-------+
| unchanged |  96.3  |   97.09   | 95.52  | 92.86 | 95.52 |
|  changed  | 48.61  |   43.68   | 54.81  | 32.11 | 54.81 |
+-----------+--------+-----------+--------+-------+-------+
2024/07/29 12:31:27 - mmengine - INFO - Epoch(test) [1950/1950]    aAcc: 93.0900  mFscore: 72.4600  mPrecision: 70.3800  mRecall: 75.1700  mIoU: 62.4900  mAcc: 75.1700  data_time: 0.0354  time: 0.0441
